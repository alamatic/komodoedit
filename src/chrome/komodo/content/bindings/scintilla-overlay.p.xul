<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
 Version: MPL 1.1/GPL 2.0/LGPL 2.1
 
 The contents of this file are subject to the Mozilla Public License
 Version 1.1 (the "License"); you may not use this file except in
 compliance with the License. You may obtain a copy of the License at
 http://www.mozilla.org/MPL/
 
 Software distributed under the License is distributed on an "AS IS"
 basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 License for the specific language governing rights and limitations
 under the License.
 
 The Original Code is Komodo code.
 
 The Initial Developer of the Original Code is ActiveState Software Inc.
 Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
 ActiveState Software Inc. All Rights Reserved.
 
 Contributor(s):
   ActiveState Software Inc
 
 Alternatively, the contents of this file may be used under the terms of
 either the GNU General Public License Version 2 or later (the "GPL"), or
 the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 in which case the provisions of the GPL or the LGPL are applicable instead
 of those above. If you wish to allow use of your version of this file only
 under the terms of either the GPL or the LGPL, and not to allow others to
 use your version of this file under the terms of the MPL, indicate your
 decision by deleting the provisions above and replace them with the notice
 and other provisions required by the GPL or the LGPL. If you do not delete
 the provisions above, a recipient may use your version of this file under
 the terms of any one of the MPL, the GPL or the LGPL.
 
 ***** END LICENSE BLOCK ***** -->
<!DOCTYPE overlay PUBLIC "-//MOZILLA//DTD XUL V1.0//EN" "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<!-- this overlay provides the minimal set of scripts and overlays that are required
     to properly use scintilla in a dialog or secondary window. It also handles fixing
     the context menu for scintilla.  -->

<?xml-stylesheet href="chrome://global/skin/global.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/global/global.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/bindings/buttons.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/bindings/views.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/bindings/scintilla.css" type="text/css"?>
<?xml-stylesheet href="chrome://komodo/skin/toolbar.css" type="text/css"?>
<?xul-overlay href="chrome://komodo/content/commandsOverlay.xul"?>

<overlay id="scintillaOverlay" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

    <script src="chrome://komodo/content/library/logging.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/library/trace.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/library/windowManager.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/library/timers.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/library/stringutils.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/library/color_functions.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/library/controller.js"
            type="application/x-javascript;version=1.7"/>
    <script src="chrome://komodo/content/library/commands.js"
            type="application/x-javascript;version=1.7"/>
    <script src="chrome://komodo/content/library/DragDrop.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/library/open.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/launch.js"
            type="application/x-javascript;version=1.7" />
    <script src="chrome://komodo/content/markers.js"
            type="application/x-javascript;version=1.7" />

    <!-- These are needed to support drag and drop -->
    <script src="chrome://global/content/nsDragAndDrop.js"/>

    <hbox id="scintillaOverlayXul" style="margin: 0px; padding: 0px; height: 0px; width: 0px;">
        <menupopup type="buffercontext" id="bufferContextMenu"/>
        <menupopup id = "token-context-menu"/>
        <spacer height="0" id="context-spacer" context="token-context-menu"/>
        <commandset id="allcommands"/>
    </hbox>


<script type="application/x-javascript;version=1.7">
<![CDATA[
var gMainWindow = null;

if (typeof(gEditorTooltipHandler) == 'undefined') {
    var gEditorTooltipHandler = null;
}

function scintillaOverlayOnLoad()
{
    gMainWindow = ko.windowManager.getMainWindow();

    // "steal" the commands and keyset from the main window
    // Doing it the 'right' way takes a long time - I'm hoping this
    // will be faster.
    var node = 
// #if MOZILLA_VERSION < 1.9
                gMainWindow.document.
                           getElementById('widekeyset').
                           cloneNode(1);
// #else
                document.importNode(gMainWindow.document.
                           getElementById('widekeyset'), true)
// #endif
    document.documentElement.appendChild(node);
    doDialogKeypressHack();
    doContextMenuHackForPlugin();
}

// XXX bug 41071
function doDialogKeypressHack() {
    window.addEventListener("keypress", keypressInterrupt, false);
}

function keypressInterrupt(event) {
    // get the command name from the keybinding and execute it
    var key = gMainWindow.gKeybindingMgr.event2keylabel(event);
    if (!key) return;
    var command = gMainWindow.gKeybindingMgr.key2command[key];
    // When not the main window, do not handle cmd_delete in a textbox,
    // otherwise a textbox widget will not work correctly from a XUL dialog.
    // Bug 65504.
    if ((gMainWindow != window) && (command == 'cmd_delete') &&
        ('originalTarget' in event) &&
        (event.originalTarget.nodeName == "html:input")) {
        return;
    }
    if (command && ko.commands.doCommand(command))
        event.preventDefault();
}

function doContextMenuHackForPlugin() {
    // Verified still necessary with moz 1.8 branch - SMC
    // For some reason popups over the plugin are messed up until
    // the first context menu over mozilla is activated. It is apparently
    // due to popupNode not being initialized, so we do that here. See:
    //   http://www.xulplanet.com/references/elemref/ref_popup.html
    try {
        var toolbar = document.getElementById('context-spacer');
        if (!toolbar) return;
        document.popupNode = toolbar;
    } catch(e) {
        log.exception(e);
    }
}
]]>
</script>

</overlay>
