/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 * 
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * The Original Code is Komodo code.
 * 
 * The Initial Developer of the Original Code is ActiveState Software Inc.
 * Portions created by ActiveState Software Inc are Copyright (C) 2000-2007
 * ActiveState Software Inc. All Rights Reserved.
 * 
 * Contributor(s):
 *   ActiveState Software Inc
 * 
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 * 
 * ***** END LICENSE BLOCK ***** */

// ISciMozEvents.idl
// Event interface from the Scintilla Mozilla plugin.
// Author: Neil Hodgson

#include "nsISupports.idl"

[scriptable, uuid(1b7577c0-ba94-42b6-879d-c4783b9e3c78)]
interface ISciMozEvents : nsISupports {
    // XXX several events are commented out because we don't
    // actually use them in komodo.  If we end up needing to
    // use them, we will need to split into two or more
    // ISci*Events interfaces.  Note that usage of these items
    // is also commented out in nsSciMoz.cxx
    
    // const long SME_STYLENEEDED      = 0x0001;
    const long SME_CHARADDED        = 0x0002;
    const long SME_SAVEPOINTREACHED = 0x0004;
    const long SME_SAVEPOINTLEFT    = 0x0008;
    // const long SME_MODIFYATTEMPTRO  = 0x0010;
    // const long SME_KEY              = 0x0020;
    const long SME_DWELLSTART       = 0x0010;
    const long SME_DWELLEND         = 0x0020;
    const long SME_DOUBLECLICK      = 0x0040;
    const long SME_UPDATEUI         = 0x0080;
    const long SME_MODIFIED         = 0x0100;
    // const long SME_MACRORECORD      = 0x0200;
    const long SME_MARGINCLICK      = 0x0400;
    // const long SME_NEEDSHOWN        = 0x0800;
    const long SME_POSCHANGED       = 0x1000;
    // const long SME_PAINTED          = 0x2000;
    const long SME_ZOOM             = 0x4000;
    const long SME_HOTSPOTDOUBLECLICK     = 0x8000;

    const long SME_ALL              = 0xFFFF;

    // void onStyleNeeded(in long position);
    void onCharAdded(in long ch);
    void onSavePointReached();
    void onSavePointLeft();
    // void onModifyAttemptRO();
    // onKey is specific to the GTK+ version
    // void onKey(in long ch, in long modifiers);
    void onDoubleClick();
    void onUpdateUI();
    //XXX Would like the 'text' argument to be wstring, but we cannot.
    //    See comment at nsSciMoz.cxx:418 for details.
    void onModified(in long position, in long modificationType,
                    [size_is(length)] in string text, in PRUint32 length,
                    in long linesAdded, in long line,
                    in long foldLevelNow, in long foldLevelPrev);
    // void onMacroRecord(in long message, in long wParam, in long lParam);
    void onMarginClick(in long modifiers, in long position, in long margin);
    // void onNeedShown(in long position, in long length);
    void onPosChanged(in long position);
    void onZoom();
    void onHotSpotDoubleClick(in long position, in long modifiers);
    // void onPainted();
    void onDwellStart(in long position, in long x, in long y);
    void onDwellEnd(in long position, in long x, in long y);
};
