# HG changeset patch
# Parent 32bed44cdb1a75b1b89e0cc367ed6e9ee93949cb
importing patch extra-timeline-entries.patch

diff --git a/content/xul/document/src/nsXULDocument.cpp b/content/xul/document/src/nsXULDocument.cpp
--- a/content/xul/document/src/nsXULDocument.cpp
+++ b/content/xul/document/src/nsXULDocument.cpp
@@ -104,16 +104,17 @@
 #include "nsIObjectInputStream.h"
 #include "nsIObjectOutputStream.h"
 #include "nsContentList.h"
 #include "nsIScriptGlobalObject.h"
 #include "nsIScriptGlobalObjectOwner.h"
 #include "nsIScriptRuntime.h"
 #include "nsIScriptSecurityManager.h"
 #include "nsNodeInfoManager.h"
+#include "nsITimelineService.h"
 #include "nsContentCreatorFunctions.h"
 #include "nsContentUtils.h"
 #include "nsIParser.h"
 #include "nsIParserService.h"
 #include "nsCSSStyleSheet.h"
 #include "mozilla/css/Loader.h"
 #include "nsIScriptError.h"
 #include "nsIStyleSheetLinkingElement.h"
@@ -2671,16 +2672,21 @@ nsXULDocument::LoadOverlayInternal(nsIUR
     if (PR_LOG_TEST(gXULLog, PR_LOG_DEBUG)) {
         nsCAutoString urlspec;
         aURI->GetSpec(urlspec);
 
         PR_LOG(gXULLog, PR_LOG_DEBUG,
                 ("xul: loading overlay %s", urlspec.get()));
     }
 #endif
+#ifdef MOZ_TIMELINE
+        nsCAutoString spec;
+        uri->GetSpec(spec);
+        NS_TIMELINE_MARK_FUNCTION1("XUL overlay load", spec.get());
+#endif
 
     if (aIsDynamic)
         mResolutionPhase = nsForwardReference::eStart;
 
     // Chrome documents are allowed to load overlays from anywhere.
     // In all other cases, the overlay is only allowed to load if
     // the master document and prototype document have the same origin.
 
